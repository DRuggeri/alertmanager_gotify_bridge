name: Release
on:
  - push
  - pull_request

env:
  DOCKERHUB_USERNAME: druggeri

jobs:
  test:
    name: Test
    strategy:
      matrix:
        go-version:
          - 1.15.x
          - 1.16.x
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
    runs-on: ${{ matrix.os }}

    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Test
        run: go test ./...

  release:
    needs: test
    name: Build and release
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.15

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          distribution: goreleaser
          version: latest
          args: release --parallelism 2 --rm-dist --timeout 1h --release-notes .release_info.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  containers:
    needs: release
    name: Push containers
    runs-on: ubuntu-latest
    steps:
      - name: Prep variables
        run: |
          set -u
          export PROJECT_NAME=${GITHUB_REPOSITORY##*/}
          export TAG=${GITHUB_REF##*/}

          echo "PROJECT_NAME=$PROJECT_NAME" >> $GITHUB_ENV
          echo "TAG=$TAG" >> $GITHUB_ENV

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            ${{ env.DOCKERHUB_USERNAME }}/${{ env.PROJECT_NAME }}
            ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha

      - name: Create scratch docker image
        run: |
          echo "
          FROM golang:1.17.0-alpine3.14 AS builder
          RUN apk --no-cache add git
          RUN go install github.com/${{ github.repository }}@$TAG

          FROM scratch
          COPY --from=builder /go/bin/$PROJECT_NAME /$PROJECT_NAME
          ENTRYPOINT [\"/$PROJECT_NAME\"]
          " > Dockerfile

          echo "Rendered Dockerfile in $PWD:"
          cat Dockerfile

      - name: Build and push Docker images
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
